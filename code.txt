Dashboard code
include_once('suitecrm_version.php'); 
global $sugar_config, $mod_strings;  
?>  
<?php echo get Versioned Script("modules/Home/about.js"); ?>  
<div class="about" id="  abouth eader">  
<h1><img src="include/images/suite_logo.png" alt="SuiteCRM" ondblclick= 'abouter. 
display();'> </h1>  
<br>  
<b>  
<?php echo $mod_strings['LBL_VERSION']." ".$suitecrm_version;  
if( is_file("custom_version.php" ) ){ 
include("custom_version.php" ); print("&nbsp;&nbsp;&nbsp;" 
. $custom_version );  
5 
 
}?>  
</b>  
<p>Sugar<?phpecho$mod_strings['LBL_VERSION']."".$sugar_version."(".$mod_strings  
['LBL_ BUILD']."  ".$sugar_build.")";?></p>  
<p>Sugar <?php echo $mod_strings['LBL_VERSION']." ".$sugar_version." (".$mod_strings  
['LBL_BUILD']." ".$sugar_build.")";?></p>  
<br>  
<h1><?php echo $mod_strings['LBL_CONTRIBUTOR_SUITECRM']; ?></h1>  
<table id="about_table" class="contentBox">  
<tr>  
<td valign="top" style="padding: 15px 10px 15px 10px;">  
<div class="about_suite">  
<br>  
<h3><?php echo $mod_strings['LBL_ABOUT_SUITE']; ?></h3>  
<ul id="about_menu">  
<li><?php echo $mod_strings['LBL_ABOUT_SUITE_1']; ?></li>  
<li><?php echo $mod_strings['LBL_ABOUT_SUITE_2']; ?></li>  
<li><?php echo $mod_strings['LBL_ABOUT_SUITE_3']; ?></li>  
<li><?php echo $mod_strings['LBL_ABOUT_SUITE_4']; ?></li> <li><?php 
echo $mod_strings['LBL_ABOUT_SUITE_5']; ?></li>  
</ul>  
</div>  
<div class="about_suite">  
<br>  
<h3><?php echo $mod_strings['LBL_CONTRIBUTORS']; ?></h3>  
6 
 
<ul id="about_menu">  
  
8 changes: 8 additions & 0 deletions    
@@ -54,6 +54,10 @@  
'module' => 'Contacts',  
'id' => 'BILLING_CONTACT_ID',  
'link' => true, 
'related_fields' => array 
(  
'billing_contact_id',  
),  
'BILLING_ACCOUNT' =>  
@@ -63,6 +67,10 @@  
'module' => 'Accounts',  
'id' => 'BILLING_ACCOUNT_ID',  
'link' => true, 
'related_fields' => array 
(  
'billing_account_id',  
@@ -244,17 +244,26 @@  
'bean_name'=>'AOS_Product_Categories',  
'vname' => 'LBL_AOS_PRODUCT_CATEGORIES_AOS_PRODUCTS_FROM_  
AOS_PRODUCT_CATEGORIES_TITLE',  
),  
7 
 
"aos_product_category_name" => array (  
'required' => false,  
'source' => 'non-db',  
'rname' => 'name',  
),  

server to interface
name = forms.CharField(         
label=_("Your name"),         
max_length=200     ) email = 
forms.EmailField(         
label=_("Your E-mail")  
    )  
    subject = forms.CharField(         
label=_("Subject"),         max_length=200  
8 
 
)  
    phone = forms.CharField(     label=_("Phone 
number(with country code)"),         
max_length=200  
    )  
    company = forms.CharField( 
label=_("Company name"),         
max_length=200  
    )  
    message = forms.CharField(         
label=_("Message"),         required=False,         
widget=forms.Textarea  
    )  
    country = forms.CharField max_length=40,  
        required=False,         
widget=forms. HiddenInput  
    )  
    city = forms.CharField(         
max_length=40,         required=False,         
widget=forms.HiddenInput  
)  
    city = forms.CharField(         
max_length=40,         required=False,         
widget=forms.HiddenInput  
    )  
    leadsource_token = forms.UUIDField(         
widget=forms.HiddenInput  
    )   
clean(self):  
9 
 
        super().clean()         recaptcha_response = self.data.get("g
recaptcha-response")         if recaptcha_response:  
            data = {  
                'secret': settings. GOOGLE_RECAPTCHA_SECRET_KEY,  
                'response': recaptcha_response data 
= {  
                'secret': settings. GOOGLE_RECAPTCHA_SECRET_KEY,  
                'response': recaptcha_response  
            }  
}  
            r = requests .post('https://www.google.com/recaptcha/api/siteverify', data=data)  
            result = r.json()             if "error-codes" in result and settings.ADMINS: 
leadsource  token = self. cleaned data['leadsource_token']                 leadsource 
= LeadSource .objects.filter(uuid=leadsource_token).first()                 
send_crm_email(                     "reCaptcha error",                     f"error-codes: 
{result['error-codes']}<br> <br>"                     f" LeadSource token: 
{leadsource_token} <br> <br>"                     f" LeadSource: {leadsource}",  
                    [adr[1] for adr in settings. ADMINS]  
)             if not result['success'] or "error-codes" in 
result:  
                msg = _("Sorry, invalid reCAPTCHA. Please try again or send an email.")                 
raise forms.ValidationError(msg).  

